<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-08-25T20:26:58+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Easy is Perfect</title><subtitle>Want to make some good product for world
</subtitle><author><name>melonicedlatte</name><email>melonicedlatte@gmail.com</email></author><entry><title type="html">컴퓨터 전원 상태 S0, S1 … 과 Modern Standby 개념</title><link href="http://localhost:4000/computerarchitecture/2019/08/23/090300.html" rel="alternate" type="text/html" title="컴퓨터 전원 상태 S0, S1 ... 과 Modern Standby 개념" /><published>2019-08-23T00:00:00+09:00</published><updated>2019-08-23T00:00:00+09:00</updated><id>http://localhost:4000/computerarchitecture/2019/08/23/090300</id><content type="html" xml:base="http://localhost:4000/computerarchitecture/2019/08/23/090300.html">&lt;h2 id=&quot;컴퓨터-전원-상태&quot;&gt;컴퓨터 전원 상태&lt;/h2&gt;
&lt;p&gt;전원 상태를 쉽게 설명하면 아래와 같이 설명할 수 있습니다. Sn에서 n에 해당하는 &lt;strong&gt;숫자가 커질수록 전원을 적게 사용&lt;/strong&gt;합니다. 또, 정상 상태로 &lt;strong&gt;복구하는 시간도 오래 걸립니다.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;S0 : 컴퓨터가 정상적으로 동작하는 활성 상태&lt;/li&gt;
  &lt;li&gt;S1 : 절전상태. CPU, 메모리 정보 유지. 모든 하드웨어 전력 공급하는 상태의 절전모드.&lt;/li&gt;
  &lt;li&gt;S2 : 절전상태. CPU 캐쉬와 시스템 캐쉬 사라짐. 프로세서 동작 멈춤.&lt;/li&gt;
  &lt;li&gt;S3 : 절전상태. 하드디스크나 SSD같은 보조기억장치가 메모리나 CPU 같은 주 기억장치의 정보를 보관.&lt;/li&gt;
  &lt;li&gt;S4 : 절전상태. 최대절전모드라고 불리며, 모든 장치의 전력이 차단된 상태. 절전상태 해제까지 시간이 걸림.&lt;/li&gt;
  &lt;li&gt;S5 : 컴퓨터 OFF. 컴퓨터 전원이 완전이 꺼진 상태.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-is-모던-스탠바이modern-standby&quot;&gt;What is 모던 스탠바이(Modern Standby)?&lt;/h2&gt;
&lt;p&gt;Window 10에서는 모던 스탠바이(Modern Standby)라는 &lt;code class=&quot;highlighter-rouge&quot;&gt;전력 조정 모드&lt;/code&gt;가 존재합니다. 쉽게 이해하기 위해서는 스마트폰의 시스템 전원을 보면 됩니다. 스마트폰에서 전원 버튼을 누르면, 스마트폰 시스템은 절전 모드에 들어갑니다. 이런 경우, &lt;strong&gt;전원 버튼&lt;/strong&gt;을 누르거나 &lt;strong&gt;전화나 카톡&lt;/strong&gt;처럼 깨어나도록 설정한 &lt;strong&gt;이벤트가 발생&lt;/strong&gt;해야 절전 모드를 탈출합니다.&lt;/p&gt;

&lt;p&gt;고성능의 PC나 서버에서는 계속 전원이 안정적으로 공급되기 때문에 전원에 대한 이슈가 없지만, 노트북과 같은 장치들은 장시간의 사용을 위하여 저전력 상태를 잘 안정적으로 유지해야합니다. 이러한 이유에서 Modern Standby가 등장했다고 보여집니다.&lt;/p&gt;

&lt;p&gt;Modern Standby는 Windows 8.1의 Connected Standby 모드에서 확장된 모드이고, Connected Standby는 지원하지 않던 하드디스크, 하이브리드 디스크(SSD + HDD or SSHD), 네트워크 인터페이스(NIC)가 장착된 상태에서도 저전력을 지원합니다. Modern Standby는 &lt;code class=&quot;highlighter-rouge&quot;&gt;S0&lt;/code&gt; 저전력 대기 모델을 채택하였고, 저전력 상태에서 네트워크 활동을 제한하는 기존의 설정과 달리 &lt;strong&gt;네트워크 연결이 끊어지지 않습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;출처&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;https://support.lenovo.com/be/ko/solutions/ht507599&lt;/li&gt;
  &lt;li&gt;https://docs.microsoft.com/en-us/windows-hardware/design/device-experiences/modern-standby&lt;/li&gt;
  &lt;li&gt;https://zipi.me/246&lt;/li&gt;
&lt;/ul&gt;</content><author><name>melonicedlatte</name></author><category term="ComputerArchitecture" /><category term="ComputerArchitecture" /><summary type="html">컴퓨터 전원 상태 전원 상태를 쉽게 설명하면 아래와 같이 설명할 수 있습니다. Sn에서 n에 해당하는 숫자가 커질수록 전원을 적게 사용합니다. 또, 정상 상태로 복구하는 시간도 오래 걸립니다. S0 : 컴퓨터가 정상적으로 동작하는 활성 상태 S1 : 절전상태. CPU, 메모리 정보 유지. 모든 하드웨어 전력 공급하는 상태의 절전모드. S2 : 절전상태. CPU 캐쉬와 시스템 캐쉬 사라짐. 프로세서 동작 멈춤. S3 : 절전상태. 하드디스크나 SSD같은 보조기억장치가 메모리나 CPU 같은 주 기억장치의 정보를 보관. S4 : 절전상태. 최대절전모드라고 불리며, 모든 장치의 전력이 차단된 상태. 절전상태 해제까지 시간이 걸림. S5 : 컴퓨터 OFF. 컴퓨터 전원이 완전이 꺼진 상태. What is 모던 스탠바이(Modern Standby)? Window 10에서는 모던 스탠바이(Modern Standby)라는 전력 조정 모드가 존재합니다. 쉽게 이해하기 위해서는 스마트폰의 시스템 전원을 보면 됩니다. 스마트폰에서 전원 버튼을 누르면, 스마트폰 시스템은 절전 모드에 들어갑니다. 이런 경우, 전원 버튼을 누르거나 전화나 카톡처럼 깨어나도록 설정한 이벤트가 발생해야 절전 모드를 탈출합니다. 고성능의 PC나 서버에서는 계속 전원이 안정적으로 공급되기 때문에 전원에 대한 이슈가 없지만, 노트북과 같은 장치들은 장시간의 사용을 위하여 저전력 상태를 잘 안정적으로 유지해야합니다. 이러한 이유에서 Modern Standby가 등장했다고 보여집니다. Modern Standby는 Windows 8.1의 Connected Standby 모드에서 확장된 모드이고, Connected Standby는 지원하지 않던 하드디스크, 하이브리드 디스크(SSD + HDD or SSHD), 네트워크 인터페이스(NIC)가 장착된 상태에서도 저전력을 지원합니다. Modern Standby는 S0 저전력 대기 모델을 채택하였고, 저전력 상태에서 네트워크 활동을 제한하는 기존의 설정과 달리 네트워크 연결이 끊어지지 않습니다. 출처 https://support.lenovo.com/be/ko/solutions/ht507599 https://docs.microsoft.com/en-us/windows-hardware/design/device-experiences/modern-standby https://zipi.me/246</summary></entry><entry><title type="html">Fast Startup(빠른 시작)의 개념과 특징</title><link href="http://localhost:4000/computerarchitecture/2019/08/23/164700.html" rel="alternate" type="text/html" title="Fast Startup(빠른 시작)의 개념과 특징" /><published>2019-08-23T00:00:00+09:00</published><updated>2019-08-23T00:00:00+09:00</updated><id>http://localhost:4000/computerarchitecture/2019/08/23/164700</id><content type="html" xml:base="http://localhost:4000/computerarchitecture/2019/08/23/164700.html">&lt;h2 id=&quot;what-is-fast-startup&quot;&gt;What is Fast Startup?&lt;/h2&gt;

&lt;h3 id=&quot;특징-및-장점&quot;&gt;특징 및 장점&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/201908/4C1BC6ED-4F42-46C9-907B-82E42B6C19E0.png&quot; alt=&quot;image&quot; class=&quot;rounded img_center width_40&quot; /&gt;
&lt;strong class=&quot;caption&quot;&gt;Fast Startup vs Regular Boot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;윈도우 8/10 에서는 마이크로소프트에서 &lt;strong&gt;Fast Startup&lt;/strong&gt;이라는 컴퓨터 부팅 방식을 지원합니다. Fast Startup은 cold boot와 절전 상태에서 전원을 키는 상태가 결합된 모드입니다. 윈도우 7 에서는 종료하는 동안 OS는 User session과 kenerl session을 종료합니다. 하지만, 윈도우 8 에서는 kernel session는 종료되지 않고, 절전 상태로 들어갑니다. 파일 사이즈가 매우 큰 완전 절전 상태와 다르게, &lt;code class=&quot;highlighter-rouge&quot;&gt;kernel only&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;0 Hibernation 데이터 파일&lt;/code&gt;을 가지기 때문에, &lt;strong&gt;사이즈가 매우 작습니다&lt;/strong&gt;. 그 결과, 디스크에 쓰는 시간이 매우 작아집니다. 부팅 때, 이 파일을 사용하면 &lt;strong&gt;시간적 이점이 생깁니다&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;이슈-및-단점&quot;&gt;이슈 및 단점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Fast Startup이 enabled 되어 있으면, regular shutdown을 하지 않습니다. 이 경우 시스템 update가 잘 이루어지지 않을 수 있습니다. &lt;strong&gt;하지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;컴퓨터 다시 시작&lt;/code&gt;의 경우에는 Fast Startup이 적용되지 않습니다.&lt;/strong&gt; 따라서, 시스템 update가 이루어지면 종료하지 않고, 재시작을 하거나 cold shutdown을 수행할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fast Startup은 암호화된 디스크 이미지를 방해할 수 있습니다.&lt;/strong&gt; TrueCrypt와 같은 암호화된 프로그램의 사용자들은, 시스템이 종료되기 전에 mounted한 암호화된 드라이버들이 백업을 시작할 때, 자동으로 remount 한다고 보고했습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;절전을 지원하지 않는 시스템에서는 지원할 수 없습니다.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;빠른 시작을 사용하도록 설정된 컴퓨터를 종료하면 Windows(윈도우) 하드 디스크를 lock down 합니다. 이는 컴퓨터가 이중 부팅으로 구성되어 있으면 다른 운영 체제에서 액세스할 수 없다는 것을 의미합니다. 더욱이 다른 OS로 부팅한 다음 최대 절전 모드인 Windows(윈도우) 설치에서 사용하는 하드 디스크(또는 파티션)에 액세스하거나 변경하면 손상을 일으킬 수 있습니다. &lt;strong&gt;듀얼 부팅이라면 Fast Startup이나 최대 절전 모드를 전혀 사용하지 않는 것이 좋습니다.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fast Startup을 활성화시키고 컴퓨터를 종료할 때, BIOS/UEFI 설정에 진입하지 못할 수 있습니다. 컴퓨터가 최대 절전 상태에서는 전원이 완전하게 차단되지 않는데, 이러한 상태에서 &lt;strong&gt;BIOS/UEFI에 진입하는 것을 지원하지 않는 경우가 있습니다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;설정-방법&quot;&gt;설정 방법&lt;/h3&gt;
&lt;p&gt;제어판 &amp;gt; 하드웨어 및 소리 &amp;gt; 전원 옵션 &amp;gt; 전원 단추 작동 설정 &amp;gt; &lt;strong&gt;빠른 시작 켜기 선택 or 해제&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;출처&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://www.thewindowsclub.com/fast-startup-windows-8&lt;/li&gt;
  &lt;li&gt;https://www.howtogeek.com/243901/the-pros-and-cons-of-windows-10s-fast-startup-mode/&lt;/li&gt;
&lt;/ul&gt;</content><author><name>melonicedlatte</name></author><category term="ComputerArchitecture" /><category term="ComputerArchitecture" /><summary type="html">What is Fast Startup? 특징 및 장점 Fast Startup vs Regular Boot 윈도우 8/10 에서는 마이크로소프트에서 Fast Startup이라는 컴퓨터 부팅 방식을 지원합니다. Fast Startup은 cold boot와 절전 상태에서 전원을 키는 상태가 결합된 모드입니다. 윈도우 7 에서는 종료하는 동안 OS는 User session과 kenerl session을 종료합니다. 하지만, 윈도우 8 에서는 kernel session는 종료되지 않고, 절전 상태로 들어갑니다. 파일 사이즈가 매우 큰 완전 절전 상태와 다르게, kernel only or 0 Hibernation 데이터 파일을 가지기 때문에, 사이즈가 매우 작습니다. 그 결과, 디스크에 쓰는 시간이 매우 작아집니다. 부팅 때, 이 파일을 사용하면 시간적 이점이 생깁니다. 이슈 및 단점 Fast Startup이 enabled 되어 있으면, regular shutdown을 하지 않습니다. 이 경우 시스템 update가 잘 이루어지지 않을 수 있습니다. 하지만, 컴퓨터 다시 시작의 경우에는 Fast Startup이 적용되지 않습니다. 따라서, 시스템 update가 이루어지면 종료하지 않고, 재시작을 하거나 cold shutdown을 수행할 수 있습니다. Fast Startup은 암호화된 디스크 이미지를 방해할 수 있습니다. TrueCrypt와 같은 암호화된 프로그램의 사용자들은, 시스템이 종료되기 전에 mounted한 암호화된 드라이버들이 백업을 시작할 때, 자동으로 remount 한다고 보고했습니다. 절전을 지원하지 않는 시스템에서는 지원할 수 없습니다. 빠른 시작을 사용하도록 설정된 컴퓨터를 종료하면 Windows(윈도우) 하드 디스크를 lock down 합니다. 이는 컴퓨터가 이중 부팅으로 구성되어 있으면 다른 운영 체제에서 액세스할 수 없다는 것을 의미합니다. 더욱이 다른 OS로 부팅한 다음 최대 절전 모드인 Windows(윈도우) 설치에서 사용하는 하드 디스크(또는 파티션)에 액세스하거나 변경하면 손상을 일으킬 수 있습니다. 듀얼 부팅이라면 Fast Startup이나 최대 절전 모드를 전혀 사용하지 않는 것이 좋습니다. Fast Startup을 활성화시키고 컴퓨터를 종료할 때, BIOS/UEFI 설정에 진입하지 못할 수 있습니다. 컴퓨터가 최대 절전 상태에서는 전원이 완전하게 차단되지 않는데, 이러한 상태에서 BIOS/UEFI에 진입하는 것을 지원하지 않는 경우가 있습니다. 설정 방법 제어판 &amp;gt; 하드웨어 및 소리 &amp;gt; 전원 옵션 &amp;gt; 전원 단추 작동 설정 &amp;gt; 빠른 시작 켜기 선택 or 해제 출처 https://www.thewindowsclub.com/fast-startup-windows-8 https://www.howtogeek.com/243901/the-pros-and-cons-of-windows-10s-fast-startup-mode/</summary></entry><entry><title type="html">8b/10b encoding이란? 개념 정리</title><link href="http://localhost:4000/computerarchitecture/2019/08/19/152700.html" rel="alternate" type="text/html" title="8b/10b encoding이란? 개념 정리" /><published>2019-08-19T00:00:00+09:00</published><updated>2019-08-19T00:00:00+09:00</updated><id>http://localhost:4000/computerarchitecture/2019/08/19/152700</id><content type="html" xml:base="http://localhost:4000/computerarchitecture/2019/08/19/152700.html">&lt;h2 id=&quot;what-is-8b10b-encoding&quot;&gt;What is 8b/10b encoding?&lt;/h2&gt;
&lt;p&gt;8b/10b는 8bit word를 10bit symbol에 mapping하여 만든 line code입니다. 즉, 8bit를 전송하기 위해서 10bit가 필요합니다. 이 mapping을 통하여 DC-balance와 bounded dispartiy를 달성하면서, 합리적인 clock recovery를 허용하는 충분한 상태 변화를 제공합니다.&lt;/p&gt;

&lt;p&gt;8b/10b code는 다양한 방법으로 구현될 수 있습니다. 예를 들면 설계할 때, 하드웨어 요구사항이나 DC-balance와 같은 특별한 파라미터들에 초점을 맞춰서 설계할 수도 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;how-it-works-for-the-ibm-code&quot;&gt;How it works for the IBM code&lt;/h2&gt;
&lt;p&gt;위에서 언급한 것처럼, 8b/10b는 8bit word를 10bit symbol에 mapping하여 만든 line code입니다. low data 5개는 6-bit group으로 encode되며(5b/6b), top 3 bit는 4-bit group으로 encode됩니다(3b/4b). 이러한 code group은 10-bit symbol로 결합됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;data symbol&lt;/strong&gt;은 x가 0-31, y가 0-7이고, &lt;strong&gt;D.x.y&lt;/strong&gt;로 언급됩니다. 8b/10b encoding의 Standard에서는 data symbol 대신 전송할 수 있는 12개의 &lt;strong&gt;special symbol(혹은 control characters)&lt;/strong&gt;를 정의하고 있습니다. 이러한 special symbol들은 start-of-frame, end-of-frame, link idle, skip and similar link-level conditions들에 사용됩니다. 10-bit symbol을 정의하는데 사용하기 위하여 special symbol(i.e. “comma symbol”)이 필요하고, &lt;strong&gt;K.x.y&lt;/strong&gt;의 형태를 가집니다.&lt;/p&gt;

&lt;p&gt;8b/10b encoding는 8-bit word를 위하여 10-bit를 사용하기 때문에, 존재할 수 있는 1024개의($ 2 ^ {10} $) code에서 아래와 같은 경우의 케이스의 code를 제외 할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;5개 이상의 연속된 bit가 존재함&lt;/li&gt;
  &lt;li&gt;모든 0과 1의 총 합의 차가 2보다 큼&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;또, 8-bit로 구현할 수 있는 256개의 word 중 일부는 두 가지 다른 방식으로 인코딩 될 수 있습니다. 이런 alternative encoding 방식을 사용하면, serial data stream에서 long-term DC-balance를 달성할 수 있습니다. 이는 Data stream이 high-pass 특성을 가진 채널에서 사용할 수 있게 합니다.&lt;/p&gt;

&lt;h3 id=&quot;encoding-tables&quot;&gt;Encoding tables&lt;/h3&gt;
&lt;p&gt;아래에 나오는 표들을 보면 A는 최하위 비트이고, H는 최상위 비트입니다. extra bit는 i,j입니다. (a, b, c, d, e, &lt;strong&gt;i&lt;/strong&gt;, f, g, h, &lt;strong&gt;j&lt;/strong&gt;) 5b/6b 다음에 3b/4b 이 오는 형태입니다. 이러한 구조는 “comma codes”의 special bit sequence의 유일성을 보장합니다.&lt;/p&gt;

&lt;p&gt;0과 1이 전송되는 stream에서의 residual effect는 running disparity(RD)로 유지되고, slew effect는 encoding 선택에 의하여 균형을 이룹니다.&lt;/p&gt;

&lt;p&gt;5b/6b 코드와 3b/4b 코드는 쌍을 이루는 disparity code입니다. 각각은 0과 1의 개수가 동일하거나 2개 차이가 납니다. 0이 아닌 disparty(disparty = 1 count - 0 count), 즉 $ \pm 2$가 사용되면, positive &amp;amp; negative dispartiy endocing을 선택해야 합니다. 표를 살펴보면 RD가 $\pm 2$가 들어온 경우에 계속해서 바뀌는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;running-disparity&quot;&gt;Running disparity&lt;/h3&gt;
&lt;p&gt;8b/10b 코딩은 DC-free이다. 이것은 오랜 시간을 두고 신호를 살펴보면 0과 1의 비율이 정확히 50% 라는 것입니다. 이러한 조건을 달성하기 위해서는, 전송되는 0과 1의 숫자가 항상 $ \pm 2$ 를 유지할 수 있게 제한됩니다.&lt;/p&gt;

&lt;p&gt;1과 0의 개수가 같지 않은 5b/6b과 3b/4b 코드에 대해 전송하는 데 사용할 수 있는 패턴이 2개가 있습니다.(1이 2개 더 많거나 0이 2개 더 많은 경우) RD의 값에 따라서 보낼 패턴이 선택됩니다. 1과 0의 개수가 같은 경우에는 D.07과 D.x.3을 제외하고는 선택의 여지가 없습니다.(D.07 같은 경우에는 1과 0의 개수가 같지만 2가지 케이스가 존재)&lt;/p&gt;

&lt;p&gt;D.x.7의 경우에는 앞의 5b/6b의 코드와 결합했을 때, 5개의 연속된 같은 숫자가 나오면 안되기 때문에, D.x.P7 or D.x.A7 encoding을 사용합니다. D.x.A7의 경우 RD = 1이면  x = 11 or 13 or 14 , RD = -1 이면 x = 17 or 18 or 19 입니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Previous RD&lt;/th&gt;
      &lt;th&gt;Disparity of code word&lt;/th&gt;
      &lt;th&gt;Disparity chosen&lt;/th&gt;
      &lt;th&gt;Next RD&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;−1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;−1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;−1&lt;/td&gt;
      &lt;td&gt;±2&lt;/td&gt;
      &lt;td&gt;+2&lt;/td&gt;
      &lt;td&gt;+1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;+1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;+1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;+1&lt;/td&gt;
      &lt;td&gt;±2&lt;/td&gt;
      &lt;td&gt;−2&lt;/td&gt;
      &lt;td&gt;−1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;5b6b-table&quot;&gt;5b/6b table&lt;/h3&gt;

&lt;table class=&quot;wikitable&quot; style=&quot;text-align:center&quot;&gt;&lt;caption&gt;5b/6b code&lt;/caption&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th colspan=&quot;2&quot;&gt;Input&lt;/th&gt;&lt;th&gt;RD=−1&lt;/th&gt;&lt;th&gt;RD=+1&lt;/th&gt;&lt;td rowspan=&quot;19&quot;&gt;&lt;/td&gt;&lt;th colspan=&quot;2&quot;&gt;Input&lt;/th&gt;&lt;th&gt;RD=−1&lt;/th&gt;&lt;th&gt;RD=+1&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;EDCBA&lt;/th&gt;&lt;th colspan=&quot;2&quot;&gt;abcdei&lt;/th&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;EDCBA&lt;/th&gt;&lt;th colspan=&quot;2&quot;&gt;abcdei&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.00&lt;/td&gt;&lt;td&gt;00000&lt;/td&gt;&lt;td&gt;100111&lt;/td&gt;&lt;td&gt;011000&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.16&lt;/td&gt;&lt;td&gt;10000&lt;/td&gt;&lt;td&gt;011011&lt;/td&gt;&lt;td&gt;100100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.01&lt;/td&gt;&lt;td&gt;00001&lt;/td&gt;&lt;td&gt;011101&lt;/td&gt;&lt;td&gt;100010&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.17&lt;/td&gt;&lt;td&gt;10001&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;100011&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.02&lt;/td&gt;&lt;td&gt;00010&lt;/td&gt;&lt;td&gt;101101&lt;/td&gt;&lt;td&gt;010010&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.18&lt;/td&gt;&lt;td&gt;10010&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;010011&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.03&lt;/td&gt;&lt;td&gt;00011&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;110001&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.19&lt;/td&gt;&lt;td&gt;10011&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;110010&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.04&lt;/td&gt;&lt;td&gt;00100&lt;/td&gt;&lt;td&gt;110101&lt;/td&gt;&lt;td&gt;001010&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.20&lt;/td&gt;&lt;td&gt;10100&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;001011&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.05&lt;/td&gt;&lt;td&gt;00101&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;101001&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.21&lt;/td&gt;&lt;td&gt;10101&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;101010&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.06&lt;/td&gt;&lt;td&gt;00110&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;011001&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.22&lt;/td&gt;&lt;td&gt;10110&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;011010&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.07&lt;/td&gt;&lt;td&gt;00111&lt;/td&gt;&lt;td&gt;111000&lt;/td&gt;&lt;td&gt;000111&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.23 †&lt;/td&gt;&lt;td&gt;10111&lt;/td&gt;&lt;td&gt;111010&lt;/td&gt;&lt;td&gt;000101&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.08&lt;/td&gt;&lt;td&gt;01000&lt;/td&gt;&lt;td&gt;111001&lt;/td&gt;&lt;td&gt;000110&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.24&lt;/td&gt;&lt;td&gt;11000&lt;/td&gt;&lt;td&gt;110011&lt;/td&gt;&lt;td&gt;001100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.09&lt;/td&gt;&lt;td&gt;01001&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;100101&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.25&lt;/td&gt;&lt;td&gt;11001&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;100110&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.10&lt;/td&gt;&lt;td&gt;01010&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;010101&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.26&lt;/td&gt;&lt;td&gt;11010&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;010110&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.11&lt;/td&gt;&lt;td&gt;01011&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;110100&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.27 †&lt;/td&gt;&lt;td&gt;11011&lt;/td&gt;&lt;td&gt;110110&lt;/td&gt;&lt;td&gt;001001&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.12&lt;/td&gt;&lt;td&gt;01100&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;001101&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.28&lt;/td&gt;&lt;td&gt;11100&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;001110&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.13&lt;/td&gt;&lt;td&gt;01101&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;101100&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.29 †&lt;/td&gt;&lt;td&gt;11101&lt;/td&gt;&lt;td&gt;101110&lt;/td&gt;&lt;td&gt;010001&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.14&lt;/td&gt;&lt;td&gt;01110&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;011100&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.30 †&lt;/td&gt;&lt;td&gt;11110&lt;/td&gt;&lt;td&gt;011110&lt;/td&gt;&lt;td&gt;100001&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D.15&lt;/td&gt;&lt;td&gt;01111&lt;/td&gt;&lt;td&gt;010111&lt;/td&gt;&lt;td&gt;101000&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;D.31&lt;/td&gt;&lt;td&gt;11111&lt;/td&gt;&lt;td&gt;101011&lt;/td&gt;&lt;td&gt;010100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;K.28&lt;/td&gt;&lt;td&gt;11100&lt;/td&gt;&lt;td&gt;001111&lt;/td&gt;&lt;td&gt;110000&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;h3 id=&quot;3b4b-table&quot;&gt;3b/4b table&lt;/h3&gt;

&lt;table class=&quot;wikitable&quot; style=&quot;text-align:center&quot;&gt;&lt;caption&gt;3b/4b code&lt;/caption&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th colspan=&quot;2&quot;&gt;Input&lt;/th&gt;&lt;th&gt;RD=−1&lt;/th&gt;&lt;th&gt;RD=+1&lt;/th&gt;&lt;td rowspan=&quot;11&quot;&gt;&lt;/td&gt;&lt;th colspan=&quot;2&quot;&gt;Input&lt;/th&gt;&lt;th&gt;RD=−1&lt;/th&gt;&lt;th&gt;RD=+1&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;HGF&lt;/th&gt;&lt;th colspan=&quot;2&quot;&gt;fghj&lt;/th&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;HGF&lt;/th&gt;&lt;th colspan=&quot;2&quot;&gt;fghj&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;D.x.0&lt;/td&gt;&lt;td&gt;000&lt;/td&gt;&lt;td&gt;1011&lt;/td&gt;&lt;td&gt;0100&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;K.x.0&lt;/td&gt;&lt;td&gt;000&lt;/td&gt;&lt;td&gt;1011&lt;/td&gt;&lt;td&gt;0100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;D.x.1&lt;/td&gt;&lt;td&gt;001&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;1001&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;K.x.1 ‡&lt;/td&gt;&lt;td&gt;001&lt;/td&gt;&lt;td&gt;0110&lt;/td&gt;&lt;td&gt;1001&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;D.x.2&lt;/td&gt;&lt;td&gt;010&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;0101&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;K.x.2 ‡&lt;/td&gt;&lt;td&gt;010&lt;/td&gt;&lt;td&gt;1010&lt;/td&gt;&lt;td&gt;0101&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;D.x.3&lt;/td&gt;&lt;td&gt;011&lt;/td&gt;&lt;td&gt;1100&lt;/td&gt;&lt;td&gt;0011&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;K.x.3 ‡&lt;/td&gt;&lt;td&gt;011&lt;/td&gt;&lt;td&gt;1100&lt;/td&gt;&lt;td&gt;0011&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;D.x.4&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;1101&lt;/td&gt;&lt;td&gt;0010&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;K.x.4&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;1101&lt;/td&gt;&lt;td&gt;0010&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;D.x.5&lt;/td&gt;&lt;td&gt;101&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;1010&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;K.x.5 ‡&lt;/td&gt;&lt;td&gt;101&lt;/td&gt;&lt;td&gt;0101&lt;/td&gt;&lt;td&gt;1010&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;D.x.6&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;0110&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;K.x.6 ‡&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;1001&lt;/td&gt;&lt;td&gt;0110&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;D.x.P7 †&lt;/td&gt;&lt;td&gt;111&lt;/td&gt;&lt;td&gt;1110&lt;/td&gt;&lt;td&gt;0001&lt;/td&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;D.x.A7 †&lt;/td&gt;&lt;td&gt;111&lt;/td&gt;&lt;td&gt;0111&lt;/td&gt;&lt;td&gt;1000&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;K.x.7 ‡&lt;/td&gt;&lt;td&gt;111&lt;/td&gt;&lt;td&gt;0111&lt;/td&gt;&lt;td&gt;1000&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;h3 id=&quot;control-symbols&quot;&gt;Control symbols&lt;/h3&gt;
&lt;p&gt;control symbols는 8b/10b 데이터가 없는 유효한 sequence입니다. control symbols는 low-level control function에 사용됩니다. 예를 들어, Fibre Channel에서, K28.5는 4바이트 sequences(=Ordered Sets)의 시작에 사용됩니다.&lt;/p&gt;

&lt;table class=&quot;wikitable&quot; style=&quot;text-align:center&quot;&gt;&lt;caption&gt;Control symbols&lt;/caption&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th colspan=&quot;3&quot;&gt;Input&lt;/th&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;RD=−1&lt;/th&gt;&lt;th&gt;RD=+1&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;DEC&lt;/th&gt;&lt;th&gt;HEX&lt;/th&gt;&lt;th&gt;HGF EDCBA&lt;/th&gt;&lt;th&gt;abcdei fghj&lt;/th&gt;&lt;th&gt;abcdei fghj&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.28.0&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;1C&lt;/td&gt;&lt;td&gt;000 11100&lt;/td&gt;&lt;td&gt;001111 0100&lt;/td&gt;&lt;td&gt;110000 1011&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.28.1 †&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;3C&lt;/td&gt;&lt;td&gt;001 11100&lt;/td&gt;&lt;td&gt;001111 1001&lt;/td&gt;&lt;td&gt;110000 0110&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.28.2&amp;nbsp;&lt;/td&gt;&lt;td&gt;92&lt;/td&gt;&lt;td&gt;5C&lt;/td&gt;&lt;td&gt;010 11100&lt;/td&gt;&lt;td&gt;001111 0101&lt;/td&gt;&lt;td&gt;110000 1010&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.28.3&amp;nbsp;&lt;/td&gt;&lt;td&gt;124&lt;/td&gt;&lt;td&gt;7C&lt;/td&gt;&lt;td&gt;011 11100&lt;/td&gt;&lt;td&gt;001111 0011&lt;/td&gt;&lt;td&gt;110000 1100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.28.4&amp;nbsp;&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;9C&lt;/td&gt;&lt;td&gt;100 11100&lt;/td&gt;&lt;td&gt;001111 0010&lt;/td&gt;&lt;td&gt;110000 1101&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.28.5 †&lt;/td&gt;&lt;td&gt;188&lt;/td&gt;&lt;td&gt;BC&lt;/td&gt;&lt;td&gt;101 11100&lt;/td&gt;&lt;td&gt;001111 1010&lt;/td&gt;&lt;td&gt;110000 0101&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.28.6&amp;nbsp;&lt;/td&gt;&lt;td&gt;220&lt;/td&gt;&lt;td&gt;DC&lt;/td&gt;&lt;td&gt;110 11100&lt;/td&gt;&lt;td&gt;001111 0110&lt;/td&gt;&lt;td&gt;110000 1001&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.28.7 ‡&lt;/td&gt;&lt;td&gt;252&lt;/td&gt;&lt;td&gt;FC&lt;/td&gt;&lt;td&gt;111 11100&lt;/td&gt;&lt;td&gt;001111 1000&lt;/td&gt;&lt;td&gt;110000 0111&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.23.7&amp;nbsp;&lt;/td&gt;&lt;td&gt;247&lt;/td&gt;&lt;td&gt;F7&lt;/td&gt;&lt;td&gt;111 10111&lt;/td&gt;&lt;td&gt;111010 1000&lt;/td&gt;&lt;td&gt;000101 0111&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.27.7&amp;nbsp;&lt;/td&gt;&lt;td&gt;251&lt;/td&gt;&lt;td&gt;FB&lt;/td&gt;&lt;td&gt;111 11011&lt;/td&gt;&lt;td&gt;110110 1000&lt;/td&gt;&lt;td&gt;001001 0111&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.29.7&amp;nbsp;&lt;/td&gt;&lt;td&gt;253&lt;/td&gt;&lt;td&gt;FD&lt;/td&gt;&lt;td&gt;111 11101&lt;/td&gt;&lt;td&gt;101110 1000&lt;/td&gt;&lt;td&gt;010001 0111&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;K.30.7&amp;nbsp;&lt;/td&gt;&lt;td&gt;254&lt;/td&gt;&lt;td&gt;FE&lt;/td&gt;&lt;td&gt;111 11110&lt;/td&gt;&lt;td&gt;011110 1000&lt;/td&gt;&lt;td&gt;100001 0111&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;출처&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;위키피디아&lt;/li&gt;
&lt;/ul&gt;</content><author><name>melonicedlatte</name></author><category term="ComputerArchitecture" /><category term="ComputerArchitecture" /><summary type="html">What is 8b/10b encoding? 8b/10b는 8bit word를 10bit symbol에 mapping하여 만든 line code입니다. 즉, 8bit를 전송하기 위해서 10bit가 필요합니다. 이 mapping을 통하여 DC-balance와 bounded dispartiy를 달성하면서, 합리적인 clock recovery를 허용하는 충분한 상태 변화를 제공합니다. 8b/10b code는 다양한 방법으로 구현될 수 있습니다. 예를 들면 설계할 때, 하드웨어 요구사항이나 DC-balance와 같은 특별한 파라미터들에 초점을 맞춰서 설계할 수도 있습니다. How it works for the IBM code 위에서 언급한 것처럼, 8b/10b는 8bit word를 10bit symbol에 mapping하여 만든 line code입니다. low data 5개는 6-bit group으로 encode되며(5b/6b), top 3 bit는 4-bit group으로 encode됩니다(3b/4b). 이러한 code group은 10-bit symbol로 결합됩니다. data symbol은 x가 0-31, y가 0-7이고, D.x.y로 언급됩니다. 8b/10b encoding의 Standard에서는 data symbol 대신 전송할 수 있는 12개의 special symbol(혹은 control characters)를 정의하고 있습니다. 이러한 special symbol들은 start-of-frame, end-of-frame, link idle, skip and similar link-level conditions들에 사용됩니다. 10-bit symbol을 정의하는데 사용하기 위하여 special symbol(i.e. “comma symbol”)이 필요하고, K.x.y의 형태를 가집니다. 8b/10b encoding는 8-bit word를 위하여 10-bit를 사용하기 때문에, 존재할 수 있는 1024개의($ 2 ^ {10} $) code에서 아래와 같은 경우의 케이스의 code를 제외 할 수 있습니다. 5개 이상의 연속된 bit가 존재함 모든 0과 1의 총 합의 차가 2보다 큼 또, 8-bit로 구현할 수 있는 256개의 word 중 일부는 두 가지 다른 방식으로 인코딩 될 수 있습니다. 이런 alternative encoding 방식을 사용하면, serial data stream에서 long-term DC-balance를 달성할 수 있습니다. 이는 Data stream이 high-pass 특성을 가진 채널에서 사용할 수 있게 합니다. Encoding tables 아래에 나오는 표들을 보면 A는 최하위 비트이고, H는 최상위 비트입니다. extra bit는 i,j입니다. (a, b, c, d, e, i, f, g, h, j) 5b/6b 다음에 3b/4b 이 오는 형태입니다. 이러한 구조는 “comma codes”의 special bit sequence의 유일성을 보장합니다. 0과 1이 전송되는 stream에서의 residual effect는 running disparity(RD)로 유지되고, slew effect는 encoding 선택에 의하여 균형을 이룹니다. 5b/6b 코드와 3b/4b 코드는 쌍을 이루는 disparity code입니다. 각각은 0과 1의 개수가 동일하거나 2개 차이가 납니다. 0이 아닌 disparty(disparty = 1 count - 0 count), 즉 $ \pm 2$가 사용되면, positive &amp;amp; negative dispartiy endocing을 선택해야 합니다. 표를 살펴보면 RD가 $\pm 2$가 들어온 경우에 계속해서 바뀌는 것을 확인할 수 있습니다. Running disparity 8b/10b 코딩은 DC-free이다. 이것은 오랜 시간을 두고 신호를 살펴보면 0과 1의 비율이 정확히 50% 라는 것입니다. 이러한 조건을 달성하기 위해서는, 전송되는 0과 1의 숫자가 항상 $ \pm 2$ 를 유지할 수 있게 제한됩니다. 1과 0의 개수가 같지 않은 5b/6b과 3b/4b 코드에 대해 전송하는 데 사용할 수 있는 패턴이 2개가 있습니다.(1이 2개 더 많거나 0이 2개 더 많은 경우) RD의 값에 따라서 보낼 패턴이 선택됩니다. 1과 0의 개수가 같은 경우에는 D.07과 D.x.3을 제외하고는 선택의 여지가 없습니다.(D.07 같은 경우에는 1과 0의 개수가 같지만 2가지 케이스가 존재) D.x.7의 경우에는 앞의 5b/6b의 코드와 결합했을 때, 5개의 연속된 같은 숫자가 나오면 안되기 때문에, D.x.P7 or D.x.A7 encoding을 사용합니다. D.x.A7의 경우 RD = 1이면 x = 11 or 13 or 14 , RD = -1 이면 x = 17 or 18 or 19 입니다. Previous RD Disparity of code word Disparity chosen Next RD −1 0 0 −1 −1 ±2 +2 +1 +1 0 0 +1 +1 ±2 −2 −1 5b/6b table 5b/6b codeInputRD=−1RD=+1InputRD=−1RD=+1EDCBAabcdeiEDCBAabcdeiD.0000000100111011000D.1610000011011100100D.0100001011101100010D.1710001100011D.0200010101101010010D.1810010010011D.0300011110001D.1910011110010D.0400100110101001010D.2010100001011D.0500101101001D.2110101101010D.0600110011001D.2210110011010D.0700111111000000111D.23 †10111111010000101D.0801000111001000110D.2411000110011001100D.0901001100101D.2511001100110D.1001010010101D.2611010010110D.1101011110100D.27 †11011110110001001D.1201100001101D.2811100001110D.1301101101100D.29 †11101101110010001D.1401110011100D.30 †11110011110100001D.1501111010111101000D.3111111101011010100K.2811100001111110000 3b/4b table 3b/4b codeInputRD=−1RD=+1InputRD=−1RD=+1HGFfghjHGFfghjD.x.000010110100K.x.000010110100D.x.10011001K.x.1 ‡00101101001D.x.20100101K.x.2 ‡01010100101D.x.301111000011K.x.3 ‡01111000011D.x.410011010010K.x.410011010010D.x.51011010K.x.5 ‡10101011010D.x.61100110K.x.6 ‡11010010110D.x.P7 †11111100001D.x.A7 †11101111000K.x.7 ‡11101111000 Control symbols control symbols는 8b/10b 데이터가 없는 유효한 sequence입니다. control symbols는 low-level control function에 사용됩니다. 예를 들어, Fibre Channel에서, K28.5는 4바이트 sequences(=Ordered Sets)의 시작에 사용됩니다. Control symbolsInputRD=−1RD=+1DECHEXHGF EDCBAabcdei fghjabcdei fghjK.28.0281C000 11100001111 0100110000 1011K.28.1 †603C001 11100001111 1001110000 0110K.28.2&amp;nbsp;925C010 11100001111 0101110000 1010K.28.3&amp;nbsp;1247C011 11100001111 0011110000 1100K.28.4&amp;nbsp;1569C100 11100001111 0010110000 1101K.28.5 †188BC101 11100001111 1010110000 0101K.28.6&amp;nbsp;220DC110 11100001111 0110110000 1001K.28.7 ‡252FC111 11100001111 1000110000 0111K.23.7&amp;nbsp;247F7111 10111111010 1000000101 0111K.27.7&amp;nbsp;251FB111 11011110110 1000001001 0111K.29.7&amp;nbsp;253FD111 11101101110 1000010001 0111K.30.7&amp;nbsp;254FE111 11110011110 1000100001 0111 출처 위키피디아</summary></entry><entry><title type="html">Pytorch 설치하기</title><link href="http://localhost:4000/machinelearning/2019/08/17/013500.html" rel="alternate" type="text/html" title="Pytorch 설치하기" /><published>2019-08-17T00:00:00+09:00</published><updated>2019-08-17T00:00:00+09:00</updated><id>http://localhost:4000/machinelearning/2019/08/17/013500</id><content type="html" xml:base="http://localhost:4000/machinelearning/2019/08/17/013500.html">&lt;h2 id=&quot;pytorch-설치하기&quot;&gt;Pytorch 설치하기&lt;/h2&gt;

&lt;h3 id=&quot;환경에-맞는-pytorch-설치하기&quot;&gt;환경에 맞는 Pytorch 설치하기&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/201908/pytorch_main.jpg&quot; alt=&quot;image&quot; class=&quot;rounded img_center width_40&quot; /&gt;
&lt;strong class=&quot;caption&quot;&gt;pytorch 사이트 main&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pytorch 메인 페이지에서 스크롤하면, 다음 그림과 같은 설치 옵션을 선택할 수 있는 창이 있습니다. 현재 자신의 설정에 맞게 설정을 한 후에, Run this Command 에 나온 명령어를 복사한 후에 terminal에 입력하여 pytorch를 설치하세요.&lt;/p&gt;

&lt;p&gt;아래와 같이 진행됩니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cpuonly&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;WARNING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deprecated&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;removed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Collecting&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Solving&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;##&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Plan&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;##&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Anaconda3&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;added&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;specs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cpuonly&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;following&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packages&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;downloaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;---------------------------|-----------------&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4.7.11&lt;/span&gt;               &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;py37_0&lt;/span&gt;         &lt;span class=&quot;m&quot;&gt;3.0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.3.11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;py37_0&lt;/span&gt;         &lt;span class=&quot;m&quot;&gt;280&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KB&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cpuonly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.0&lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;                &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;           &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KB&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.9.0&lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;py37h74a9793_0&lt;/span&gt;         &lt;span class=&quot;m&quot;&gt;263&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KB&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.2.0&lt;/span&gt;              &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;py3&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_cpu_1&lt;/span&gt;        &lt;span class=&quot;m&quot;&gt;71.5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.4.0&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;py37_cpu&lt;/span&gt;         &lt;span class=&quot;m&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;------------------------------------------------------------&lt;/span&gt;
                                           &lt;span class=&quot;n&quot;&gt;Total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;        &lt;span class=&quot;m&quot;&gt;77.0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;following&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NEW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packages&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INSTALLED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;han&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pkgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.3.11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py37_0&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cpuonly&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noarch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpuonly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;pkgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.9.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py37h74a9793_0&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py3&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_cpu_1&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.4.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py37_cpu&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;following&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packages&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UPDATED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt;                                       &lt;span class=&quot;m&quot;&gt;4.6.11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py37_0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4.7.11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py37_0&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;Proceed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;Downloading&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Extracting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Packages&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.9.0&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;263&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KB&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;############################################################################&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handli&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;280&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KB&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;############################################################################&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.2.0&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;71.5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;############################################################################&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4.7.11&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3.0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;############################################################################&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.4.0&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;############################################################################&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cpuonly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.0&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KB&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;############################################################################&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Preparing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Verifying&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Executing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;torchvision-torchtext-설치하기&quot;&gt;torchvision torchtext 설치하기&lt;/h3&gt;

&lt;p&gt;torchvision은 이미지 처리용 데이터셋 처리를, torchtext는 글과 같은 데이터셋 처리를 도와주는 도구입니다. 아래의 명령어를 입력하여 설치해줍니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip3 install torchvision torchtext
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 요소들을 다 설치하면 대략적인 설치는 끝납니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pytorch를-이용한-예제-수행&quot;&gt;Pytorch를 이용한 예제 수행&lt;/h2&gt;

&lt;h3 id=&quot;tensor-출력하기&quot;&gt;tensor 출력하기&lt;/h3&gt;

&lt;p&gt;기본적인 tensor를 출력해보는 예제입니다. tensor는 쉽게 설명하면 행렬과 같은 개념이라고 보시면 됩니다. 아래와 같은 python 코드가 필요합니다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 소스코드를 python 명령어를 이용하여 윈도우 console 창인 cmd에서 수행하면 아래와 같은 결과를 얻을 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Users\user&amp;gt; python pytorch_ch3.py
tensor([[1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 결과가 나오면 성공입니다! 향후 더 나은 예제들을 Pytorch를 이용하여 수행할 수 있습니다.&lt;/p&gt;</content><author><name>melonicedlatte</name></author><category term="MachineLearning" /><category term="MachineLearning" /><summary type="html">Pytorch 설치하기 환경에 맞는 Pytorch 설치하기 pytorch 사이트 main Pytorch 메인 페이지에서 스크롤하면, 다음 그림과 같은 설치 옵션을 선택할 수 있는 창이 있습니다. 현재 자신의 설정에 맞게 설정을 한 후에, Run this Command 에 나온 명령어를 복사한 후에 terminal에 입력하여 pytorch를 설치하세요. 아래와 같이 진행됩니다. (base) C:\Users\user&amp;gt;conda install pytorch torchvision cpuonly -c pytorch WARNING: The conda.compat module is deprecated and will be removed in a future release. Collecting package metadata: done Solving environment: done ## Package Plan ## environment location: C:\Users\user\Anaconda3 added / updated specs: - cpuonly - pytorch - torchvision The following packages will be downloaded: package | build ---------------------------|----------------- conda-4.7.11 | py37_0 3.0 MB conda-package-handling-1.3.11| py37_0 280 KB cpuonly-1.0 | 0 2 KB pytorch ninja-1.9.0 | py37h74a9793_0 263 KB pytorch-1.2.0 | py3.7_cpu_1 71.5 MB pytorch torchvision-0.4.0 | py37_cpu 2.0 MB pytorch ------------------------------------------------------------ Total: 77.0 MB The following NEW packages will be INSTALLED: conda-package-han~ pkgs/main/win-64::conda-package-handling-1.3.11-py37_0 cpuonly pytorch/noarch::cpuonly-1.0-0 ninja pkgs/main/win-64::ninja-1.9.0-py37h74a9793_0 pytorch pytorch/win-64::pytorch-1.2.0-py3.7_cpu_1 torchvision pytorch/win-64::torchvision-0.4.0-py37_cpu The following packages will be UPDATED: conda 4.6.11-py37_0 --&amp;gt; 4.7.11-py37_0 Proceed ([y]/n)? Downloading and Extracting Packages ninja-1.9.0 | 263 KB | ############################################################################ | 100% conda-package-handli | 280 KB | ############################################################################ | 100% pytorch-1.2.0 | 71.5 MB | ############################################################################ | 100% conda-4.7.11 | 3.0 MB | ############################################################################ | 100% torchvision-0.4.0 | 2.0 MB | ############################################################################ | 100% cpuonly-1.0 | 2 KB | ############################################################################ | 100% Preparing transaction: done Verifying transaction: done Executing transaction: done torchvision torchtext 설치하기 torchvision은 이미지 처리용 데이터셋 처리를, torchtext는 글과 같은 데이터셋 처리를 도와주는 도구입니다. 아래의 명령어를 입력하여 설치해줍니다. pip3 install torchvision torchtext 위와 같은 요소들을 다 설치하면 대략적인 설치는 끝납니다. Pytorch를 이용한 예제 수행 tensor 출력하기 기본적인 tensor를 출력해보는 예제입니다. tensor는 쉽게 설명하면 행렬과 같은 개념이라고 보시면 됩니다. 아래와 같은 python 코드가 필요합니다. import torch x = torch.tensor([[1,2,3], [4,5,6], [7,8,9]]) print(x) 해당 소스코드를 python 명령어를 이용하여 윈도우 console 창인 cmd에서 수행하면 아래와 같은 결과를 얻을 수 있습니다. C:\Users\user&amp;gt; python pytorch_ch3.py tensor([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) 위와 같이 결과가 나오면 성공입니다! 향후 더 나은 예제들을 Pytorch를 이용하여 수행할 수 있습니다.</summary></entry><entry><title type="html">Signal에서 Assert &amp;amp; Deassert란?</title><link href="http://localhost:4000/electronics/2019/08/14/092900.html" rel="alternate" type="text/html" title="Signal에서 Assert &amp; Deassert란?" /><published>2019-08-14T00:00:00+09:00</published><updated>2019-08-14T00:00:00+09:00</updated><id>http://localhost:4000/electronics/2019/08/14/092900</id><content type="html" xml:base="http://localhost:4000/electronics/2019/08/14/092900.html">&lt;h2 id=&quot;assert--deassert&quot;&gt;Assert &amp;amp; Deassert&lt;/h2&gt;
&lt;p&gt;디지털 시그널의 &lt;code class=&quot;highlighter-rouge&quot;&gt;assert&lt;/code&gt; 라는 용어는 신호가 inactive에서 actvie로 가는 것을 말합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;deassert&lt;/code&gt; 라는 용어는 신호가 active에서 inactvie로 가는 것을 말합니다. 예를 들어, low active한 신호가 low 레벨로 가면 asserted라고 하고,  high-&amp;gt;low로 가면 deassert라고 합니다.&lt;/p&gt;</content><author><name>melonicedlatte</name></author><category term="Electronics" /><category term="Electronics" /><summary type="html">Assert &amp;amp; Deassert 디지털 시그널의 assert 라는 용어는 신호가 inactive에서 actvie로 가는 것을 말합니다. deassert 라는 용어는 신호가 active에서 inactvie로 가는 것을 말합니다. 예를 들어, low active한 신호가 low 레벨로 가면 asserted라고 하고, high-&amp;gt;low로 가면 deassert라고 합니다.</summary></entry><entry><title type="html">활성 상태 전원 관리(ASPM)란?</title><link href="http://localhost:4000/computerarchitecture/2019/07/04/110800.html" rel="alternate" type="text/html" title="활성 상태 전원 관리(ASPM)란?" /><published>2019-07-04T00:00:00+09:00</published><updated>2019-07-04T00:00:00+09:00</updated><id>http://localhost:4000/computerarchitecture/2019/07/04/110800</id><content type="html" xml:base="http://localhost:4000/computerarchitecture/2019/07/04/110800.html">&lt;h2 id=&quot;활성-상태-전원-관리aspm&quot;&gt;활성 상태 전원 관리(ASPM)&lt;/h2&gt;
&lt;h3 id=&quot;활성-상태-전원-관리aspm이란&quot;&gt;활성 상태 전원 관리(ASPM)이란?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;활성 상태 전원 관리(ASPM, Active-State Power Management)&lt;/strong&gt;는 PCIe 서브시스템의 전원 소비를 &lt;code class=&quot;highlighter-rouge&quot;&gt;PCIe 연결로 접속된 장치가 사용중이 아닐 때 저전력 상태로 변경해서 절약하는 정책&lt;/code&gt;입니다. &lt;strong&gt;ASPM&lt;/strong&gt;은 연결된 디바이스들의 전원 상태를 제어합니다.&lt;/p&gt;

&lt;p&gt;만약, 하나의 장치는 전원 소비를 낮추려고 하고, 연결의 한쪽 끝에 있는 장치가 완전히 전원이 켜져있는 상태라고 하더라도, &lt;strong&gt;ASPM&lt;/strong&gt;은 전력 소비를 줄여줍니다. (하나의 장치가 빠르게 전송하고 다른 장치는 빠르게 전송하지 않으면,  느린 장치의 속도에 맞춰서 전송하기 때문에 그런 것으로 보여집니다.) 따라서, 서로 다른 전원 상태에 있는 연결 양 끝단의 장치들이 상태를 변경해야 하기 때문에, 지연 시간이 발생합니다.&lt;/p&gt;

&lt;p&gt;연결된 디바이스는 항상 최고의 성능을 내는 전원 상태를 유지하지 않습니다. 예를 들어, 다양한 기기들은 배터리를 사용하기 때문에, &lt;strong&gt;전원 소비를 적절하게 낮춰야합니다.&lt;/strong&gt; 항상 전원을 많이 쓰는 것은 성능에는 더 도움을 줄 수도 있지만, 항상 최고 성능을 사용하지 않는 곳에서는 많은 전기를 필요로 하기 때문에 좋은 정책은 아닙니다. 필요한 시점에서 적절한 성능을 내면서 적당한 전기를 써야 좋은 전원 정책이라고 할 수 있을 것입니다. 이런 관점에서 &lt;strong&gt;ASPM&lt;/strong&gt;가 필요합니다.&lt;/p&gt;

&lt;h3 id=&quot;aspm의-전원-정책&quot;&gt;ASPM의 전원 정책&lt;/h3&gt;
&lt;p&gt;ASPM 아래의 3가지 정책을 사용합니다&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;정책&lt;/th&gt;
      &lt;th&gt;역할&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;default&lt;/td&gt;
      &lt;td&gt;PCIe 연결의 전원 상태를 시스템의 펌웨어(예: BIOS)에 지정된 디폴트 상태로 설정합니다. 이는 ASPM의 디폴트 상태입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;powersave&lt;/td&gt;
      &lt;td&gt;ASPM을 성능 감소를 감수하고라도 가능한 한 전력을 덜 소비하도록 설정합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;performance&lt;/td&gt;
      &lt;td&gt;ASPM을 비활성화해서 PCIe 연결이 최대 성능을 발휘하도록 합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;aspm-설정-방법&quot;&gt;ASPM 설정 방법&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;리눅스에서는 ASPM 정책은 /sys/module/pcie_aspm/parameters/policy에 설정되어 있습니다.&lt;/li&gt;
  &lt;li&gt;시스템 부팅시 pcie_aspm 커널 매개변수를 사용해 설정할 수도 있습니다.
    &lt;ul&gt;
      &lt;li&gt;pcie_aspm=off 는 ASPM 비활성&lt;/li&gt;
      &lt;li&gt;pcie_aspm=force 는 ASPM 활성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;참고&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://access.redhat.com/documentation/ko-kr/red_hat_enterprise_linux/6/html/power_management_guide/aspm&lt;/li&gt;
&lt;/ul&gt;</content><author><name>melonicedlatte</name></author><category term="ComputerArchitecture" /><category term="ComputerArchitecture" /><summary type="html">활성 상태 전원 관리(ASPM) 활성 상태 전원 관리(ASPM)이란? 활성 상태 전원 관리(ASPM, Active-State Power Management)는 PCIe 서브시스템의 전원 소비를 PCIe 연결로 접속된 장치가 사용중이 아닐 때 저전력 상태로 변경해서 절약하는 정책입니다. ASPM은 연결된 디바이스들의 전원 상태를 제어합니다. 만약, 하나의 장치는 전원 소비를 낮추려고 하고, 연결의 한쪽 끝에 있는 장치가 완전히 전원이 켜져있는 상태라고 하더라도, ASPM은 전력 소비를 줄여줍니다. (하나의 장치가 빠르게 전송하고 다른 장치는 빠르게 전송하지 않으면, 느린 장치의 속도에 맞춰서 전송하기 때문에 그런 것으로 보여집니다.) 따라서, 서로 다른 전원 상태에 있는 연결 양 끝단의 장치들이 상태를 변경해야 하기 때문에, 지연 시간이 발생합니다. 연결된 디바이스는 항상 최고의 성능을 내는 전원 상태를 유지하지 않습니다. 예를 들어, 다양한 기기들은 배터리를 사용하기 때문에, 전원 소비를 적절하게 낮춰야합니다. 항상 전원을 많이 쓰는 것은 성능에는 더 도움을 줄 수도 있지만, 항상 최고 성능을 사용하지 않는 곳에서는 많은 전기를 필요로 하기 때문에 좋은 정책은 아닙니다. 필요한 시점에서 적절한 성능을 내면서 적당한 전기를 써야 좋은 전원 정책이라고 할 수 있을 것입니다. 이런 관점에서 ASPM가 필요합니다. ASPM의 전원 정책 ASPM 아래의 3가지 정책을 사용합니다 정책 역할 default PCIe 연결의 전원 상태를 시스템의 펌웨어(예: BIOS)에 지정된 디폴트 상태로 설정합니다. 이는 ASPM의 디폴트 상태입니다. powersave ASPM을 성능 감소를 감수하고라도 가능한 한 전력을 덜 소비하도록 설정합니다. performance ASPM을 비활성화해서 PCIe 연결이 최대 성능을 발휘하도록 합니다. ASPM 설정 방법 리눅스에서는 ASPM 정책은 /sys/module/pcie_aspm/parameters/policy에 설정되어 있습니다. 시스템 부팅시 pcie_aspm 커널 매개변수를 사용해 설정할 수도 있습니다. pcie_aspm=off 는 ASPM 비활성 pcie_aspm=force 는 ASPM 활성 참고 https://access.redhat.com/documentation/ko-kr/red_hat_enterprise_linux/6/html/power_management_guide/aspm</summary></entry><entry><title type="html">콜드 부팅과 웜 부팅의 개념</title><link href="http://localhost:4000/computerarchitecture/2019/07/02/100700.html" rel="alternate" type="text/html" title="콜드 부팅과 웜 부팅의 개념" /><published>2019-07-02T00:00:00+09:00</published><updated>2019-07-02T00:00:00+09:00</updated><id>http://localhost:4000/computerarchitecture/2019/07/02/100700</id><content type="html" xml:base="http://localhost:4000/computerarchitecture/2019/07/02/100700.html">&lt;h2 id=&quot;부팅&quot;&gt;부팅&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;컴퓨터를 처음 켰을 때, 사용자가 작업을 할 수 있는 상태로 만드는 것&lt;/li&gt;
  &lt;li&gt;부팅 종류에 따라서 BIOS에서 POST&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; 검사단계를 거친 후에, BIOS는 MBR(Master Boot Record)를 읽어서 메모리에 올리고, MBR코드를 수행시킵니다. 이후, MBR에 포함된 부트로더에서 부팅이 가능한 파티션을 찾은 후에 OS를 수행시킵니다.&lt;/li&gt;
  &lt;li&gt;콜드 부팅과 웜 부팅이 존재함(부팅 대신 부트 라고도 하는 것 같습니다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;콜드-부팅cold-boot이란&quot;&gt;콜드 부팅(Cold Boot)이란?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;주요 부분에 전기가 통하지 않고, 전원이 모두 꺼져 있던 상태에서 전원 스위치를 눌러 컴퓨터를 다시 키는 것&lt;/li&gt;
  &lt;li&gt;POST 검사단계를 거침&lt;/li&gt;
  &lt;li&gt;컴퓨터에 무리를 줄 수 있기 때문에 가급적이면 피하는 것이 좋습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;웜-부팅warm-boot이란&quot;&gt;웜 부팅(Warm Boot)이란?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;주요 부분에 전기가 통하는 상태에서 컴퓨터를 부팅시키는 것&lt;/li&gt;
  &lt;li&gt;POST 검사단계를 거치지 않음&lt;/li&gt;
  &lt;li&gt;시스템을 검사하는 과정을 생략하여 부팅 시간이 빠르고, 컴퓨터에 무리를 덜 줍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;출처&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://blog.naver.com/kky812/100195221390&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;POST(Power On Self Test)는 검사단계로서 RAM, 하드디스크 등의 주변 장치들의 이상 유무를 체크합니다. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>melonicedlatte</name></author><category term="ComputerArchitecture" /><category term="ComputerArchitecture" /><summary type="html">부팅 컴퓨터를 처음 켰을 때, 사용자가 작업을 할 수 있는 상태로 만드는 것 부팅 종류에 따라서 BIOS에서 POST1 검사단계를 거친 후에, BIOS는 MBR(Master Boot Record)를 읽어서 메모리에 올리고, MBR코드를 수행시킵니다. 이후, MBR에 포함된 부트로더에서 부팅이 가능한 파티션을 찾은 후에 OS를 수행시킵니다. 콜드 부팅과 웜 부팅이 존재함(부팅 대신 부트 라고도 하는 것 같습니다.) 콜드 부팅(Cold Boot)이란? 주요 부분에 전기가 통하지 않고, 전원이 모두 꺼져 있던 상태에서 전원 스위치를 눌러 컴퓨터를 다시 키는 것 POST 검사단계를 거침 컴퓨터에 무리를 줄 수 있기 때문에 가급적이면 피하는 것이 좋습니다. 웜 부팅(Warm Boot)이란? 주요 부분에 전기가 통하는 상태에서 컴퓨터를 부팅시키는 것 POST 검사단계를 거치지 않음 시스템을 검사하는 과정을 생략하여 부팅 시간이 빠르고, 컴퓨터에 무리를 덜 줍니다. 출처 https://blog.naver.com/kky812/100195221390 POST(Power On Self Test)는 검사단계로서 RAM, 하드디스크 등의 주변 장치들의 이상 유무를 체크합니다. &amp;#8617;</summary></entry><entry><title type="html">반도체 EUV 공정의 개념과 필요한 이유</title><link href="http://localhost:4000/semiconductor/2019/06/30/143800.html" rel="alternate" type="text/html" title="반도체 EUV 공정의 개념과 필요한 이유" /><published>2019-06-30T00:00:00+09:00</published><updated>2019-06-30T00:00:00+09:00</updated><id>http://localhost:4000/semiconductor/2019/06/30/143800</id><content type="html" xml:base="http://localhost:4000/semiconductor/2019/06/30/143800.html">&lt;h2 id=&quot;반도체-euv&quot;&gt;반도체 EUV&lt;/h2&gt;
&lt;h3 id=&quot;euv-공정이란&quot;&gt;EUV 공정이란?&lt;/h3&gt;
&lt;p&gt;EUV 공정이란 반도체 공정 중 하나인 포토공정&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;극자외선 파장의 광원을 활용한 제조공정&lt;/code&gt;을 말합니다. 반도체를 생산할 때, 웨이퍼(wafer)는 감광물질&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;로 코팅이 되고, 스캐너라고 하는 포토공정 설비로 들어가서 회로 패턴을 새겨 넣기 위해 레이저 광원을 웨이퍼에 투사하는 노광(photolithography) 작업을 진행합니다. 위의 과정을 모두 거쳐 반도체 위에 매우 작은 회로소자를 수업이 많이 생성하는데, 노광 작업에서 사용하는 레이저 광원의 &lt;strong&gt;파장이 줄어든 것이 기존 공정 대비 차이점입니다.&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;euv-기술이-필요한-이유&quot;&gt;EUV 기술이 필요한 이유?&lt;/h3&gt;
&lt;p&gt;반도체 칩에 미세한 회로를 새겨 넣는 것은 회사의 경쟁력입니다. 더 많은 트랜지스터와 콘덴서 등 소자를 반도체에 새기고, 성능과 전력효율 또한 높일 수 있기 때문입니다.&lt;/p&gt;

&lt;p&gt;EUV 광원은 기존 공정에 적용 중인 불화아르곤(ArF) 광원보다 &lt;strong&gt;파장이 훨씬 짧기 때문에&lt;/strong&gt;, 더 미세하게 회로를 새겨 넣을 수 있습니다. 삼성전자 블로그에 따르면, 기존에 사용하는 장비의 빛 파장과 비교해 &lt;strong&gt;10분의 1 미만&lt;/strong&gt;에 불과하다고 합니다.&lt;/p&gt;

&lt;p&gt;결국 &lt;code class=&quot;highlighter-rouge&quot;&gt;파장이 짧은 빛을 사용하여 수 많은 회로 소자들을 웨이퍼 위에 새길 수 있기&lt;/code&gt; 때문에 경쟁력을 위해서 필요한 기술이라고 볼 수 있겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;출처&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;https://news.samsung.com/kr/euv-공정이란-차세대-칩의-핵심기술&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;웨이퍼 위에 회로 패턴이 담긴 마스크 상을 빛을 이용해 비춰 회로를 새긴다. 포토 리소그래피 혹은 포토 공정이라고 한다. &lt;a href=&quot;https://www.samsungsemiconstory.com/1601&quot;&gt;https://www.samsungsemiconstory.com/1601&lt;/a&gt; 참고. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;빛이나 엑스선, 감마선, 중성자선과 같은 방사선의 작용을 받아서 화학적ㆍ물리적 변화를 일으키는 화학 물질 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>melonicedlatte</name></author><category term="SemiConductor" /><category term="SemiConductor" /><summary type="html">반도체 EUV EUV 공정이란? EUV 공정이란 반도체 공정 중 하나인 포토공정1에서 극자외선 파장의 광원을 활용한 제조공정을 말합니다. 반도체를 생산할 때, 웨이퍼(wafer)는 감광물질2로 코팅이 되고, 스캐너라고 하는 포토공정 설비로 들어가서 회로 패턴을 새겨 넣기 위해 레이저 광원을 웨이퍼에 투사하는 노광(photolithography) 작업을 진행합니다. 위의 과정을 모두 거쳐 반도체 위에 매우 작은 회로소자를 수업이 많이 생성하는데, 노광 작업에서 사용하는 레이저 광원의 파장이 줄어든 것이 기존 공정 대비 차이점입니다.. EUV 기술이 필요한 이유? 반도체 칩에 미세한 회로를 새겨 넣는 것은 회사의 경쟁력입니다. 더 많은 트랜지스터와 콘덴서 등 소자를 반도체에 새기고, 성능과 전력효율 또한 높일 수 있기 때문입니다. EUV 광원은 기존 공정에 적용 중인 불화아르곤(ArF) 광원보다 파장이 훨씬 짧기 때문에, 더 미세하게 회로를 새겨 넣을 수 있습니다. 삼성전자 블로그에 따르면, 기존에 사용하는 장비의 빛 파장과 비교해 10분의 1 미만에 불과하다고 합니다. 결국 파장이 짧은 빛을 사용하여 수 많은 회로 소자들을 웨이퍼 위에 새길 수 있기 때문에 경쟁력을 위해서 필요한 기술이라고 볼 수 있겠습니다. 출처 https://news.samsung.com/kr/euv-공정이란-차세대-칩의-핵심기술 웨이퍼 위에 회로 패턴이 담긴 마스크 상을 빛을 이용해 비춰 회로를 새긴다. 포토 리소그래피 혹은 포토 공정이라고 한다. https://www.samsungsemiconstory.com/1601 참고. &amp;#8617; 빛이나 엑스선, 감마선, 중성자선과 같은 방사선의 작용을 받아서 화학적ㆍ물리적 변화를 일으키는 화학 물질 &amp;#8617;</summary></entry><entry><title type="html">MS 서피스 펜의 반응 속도를 올리는 방법</title><link href="http://localhost:4000/etc/2019/06/29/195400.html" rel="alternate" type="text/html" title="MS 서피스 펜의 반응 속도를 올리는 방법" /><published>2019-06-29T00:00:00+09:00</published><updated>2019-06-29T00:00:00+09:00</updated><id>http://localhost:4000/etc/2019/06/29/195400</id><content type="html" xml:base="http://localhost:4000/etc/2019/06/29/195400.html">&lt;h2 id=&quot;서피스-펜-반응-속도는&quot;&gt;서피스 펜 반응 속도는?&lt;/h2&gt;

&lt;p&gt;저는 서피스 프로 4를 사용하고 있습니다. 서피스 프로 같은 경우에는 펜슬이 지원됩니다. 펜슬은 AES 방식으로 Active Electrostatic의 약자입니다. 이는 정전기를 이용해 디스플레이와 신호를 주고받는 방식입니다.&lt;/p&gt;

&lt;p&gt;서피스 프로 5세대 이후에 나온 펜(서피스 펜 3세대)은 경우에는 서피스 프로 5 기준으로 Latency를 40ms 에서 21ms 로 낮췄다고 합니다. 제 서피스는 4세대이기 때문에 40ms 의 latency를 가지고 있습니다.&lt;/p&gt;

&lt;p&gt;저는 사실 체감을 잘 못하지만 가끔 느리다고 인식될 때가 있습니다. 예민하신 분들은 바로 캐치하고 속도가 빠른 제품으로 바꾸기도 합니다.&lt;/p&gt;

&lt;h2 id=&quot;서피스-펜-반응-속도-올리는-방법&quot;&gt;서피스 펜 반응 속도 올리는 방법&lt;/h2&gt;

&lt;p&gt;레지스트리 변경을 통하여 펜의 반응 속도를 올릴 수 있는 방법이 있어서 소개드립니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/201906/regedit.jpg&quot; alt=&quot;image&quot; class=&quot;rounded img_center width_40&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;먼저 시작 옆의 검색을 눌러 regedit 를 입력합니다.&lt;/li&gt;
  &lt;li&gt;검색된 regedit 를 실행합니다.&lt;/li&gt;
  &lt;li&gt;아래의 그림처럼 ‘\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\TouchPrediction’ 경로에서 Latency와 SampleTime를 8에서 2로 설정해줍니다. 1과 0으로 설정해주는 경우도 있다고 하는데, 원하는 만큼 설정해 주면 될 것 같습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/201906/regedit2.jpg&quot; alt=&quot;image&quot; class=&quot;rounded img_center width_40&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설정은 위와 같이 간단한데 실제 체감은 저는 잘 모르겠습니다. 약간 빨라진 것 같기도 하고… 플라시보인 것 같기도 하구요..&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;출처&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://m.blog.naver.com/PostView.nhn?blogId=froming01&amp;amp;logNo=220680707116&amp;amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F&lt;/li&gt;
  &lt;li&gt;https://www.windowscentral.com/how-improve-touch-response-surface&lt;/li&gt;
&lt;/ul&gt;</content><author><name>melonicedlatte</name></author><category term="Etc" /><category term="Etc" /><summary type="html">서피스 펜 반응 속도는? 저는 서피스 프로 4를 사용하고 있습니다. 서피스 프로 같은 경우에는 펜슬이 지원됩니다. 펜슬은 AES 방식으로 Active Electrostatic의 약자입니다. 이는 정전기를 이용해 디스플레이와 신호를 주고받는 방식입니다. 서피스 프로 5세대 이후에 나온 펜(서피스 펜 3세대)은 경우에는 서피스 프로 5 기준으로 Latency를 40ms 에서 21ms 로 낮췄다고 합니다. 제 서피스는 4세대이기 때문에 40ms 의 latency를 가지고 있습니다. 저는 사실 체감을 잘 못하지만 가끔 느리다고 인식될 때가 있습니다. 예민하신 분들은 바로 캐치하고 속도가 빠른 제품으로 바꾸기도 합니다. 서피스 펜 반응 속도 올리는 방법 레지스트리 변경을 통하여 펜의 반응 속도를 올릴 수 있는 방법이 있어서 소개드립니다. 먼저 시작 옆의 검색을 눌러 regedit 를 입력합니다. 검색된 regedit 를 실행합니다. 아래의 그림처럼 ‘\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\TouchPrediction’ 경로에서 Latency와 SampleTime를 8에서 2로 설정해줍니다. 1과 0으로 설정해주는 경우도 있다고 하는데, 원하는 만큼 설정해 주면 될 것 같습니다. 설정은 위와 같이 간단한데 실제 체감은 저는 잘 모르겠습니다. 약간 빨라진 것 같기도 하고… 플라시보인 것 같기도 하구요.. 출처 https://m.blog.naver.com/PostView.nhn?blogId=froming01&amp;amp;logNo=220680707116&amp;amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F https://www.windowscentral.com/how-improve-touch-response-surface</summary></entry><entry><title type="html">LG전자 스타일로 5 출시 전 이미지 등장</title><link href="http://localhost:4000/news/2019/06/29/220000.html" rel="alternate" type="text/html" title="LG전자 스타일로 5 출시 전 이미지 등장" /><published>2019-06-29T00:00:00+09:00</published><updated>2019-06-29T00:00:00+09:00</updated><id>http://localhost:4000/news/2019/06/29/220000</id><content type="html" xml:base="http://localhost:4000/news/2019/06/29/220000.html">&lt;p&gt;LG전자의 스타일로 5의 이미지가 나왔습니다. 아래와 같이 생겼습니다. 기존에 봤던 Q8과 동일한 디자인인 것 같습니다. 후면 단일 카메라, 지문인식 센서, 전면 카메라 정도의 기본 옵션 정도만 가진 제품입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\images\201906\lg_stylus5.jpg&quot; alt=&quot;image&quot; class=&quot;rounded img_center width_40&quot; /&gt;&lt;/p&gt;

&lt;p&gt;스타일러스는 상당히 아쉽습니다. 개인적으로 필기를 굉장히 좋아하는데 LG는 AES나 EMR 방식의 펜을 지원하지 않습니다. 다이소에서 구매한 터치펜으로 그리는 방식이라 너무 별로던데;; 제 생각에는 이 스타일러스 펜에 메리트가 있나 싶은 생각이 드네요.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;출처&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://www.slashleaks.com/l/lg-stylo-5-black-color-render-image-leaked&lt;/li&gt;
&lt;/ul&gt;</content><author><name>melonicedlatte</name></author><category term="News" /><category term="News" /><summary type="html">LG전자의 스타일로 5의 이미지가 나왔습니다. 아래와 같이 생겼습니다. 기존에 봤던 Q8과 동일한 디자인인 것 같습니다. 후면 단일 카메라, 지문인식 센서, 전면 카메라 정도의 기본 옵션 정도만 가진 제품입니다. 스타일러스는 상당히 아쉽습니다. 개인적으로 필기를 굉장히 좋아하는데 LG는 AES나 EMR 방식의 펜을 지원하지 않습니다. 다이소에서 구매한 터치펜으로 그리는 방식이라 너무 별로던데;; 제 생각에는 이 스타일러스 펜에 메리트가 있나 싶은 생각이 드네요. 출처 http://www.slashleaks.com/l/lg-stylo-5-black-color-render-image-leaked</summary></entry></feed>